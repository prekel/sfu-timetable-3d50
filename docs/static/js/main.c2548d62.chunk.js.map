{"version":3,"sources":["Timetable.ts","components/TargetForm.tsx","components/Home.tsx","components/TimetableLesson.tsx","components/TimetableDay.tsx","components/TimetableCarousel.tsx","components/TimetableWeek.tsx","components/TimetableTable.tsx","components/TimetablePage.tsx","components/Autocomplete.tsx","components/MainSwitch.tsx","components/Navigation.tsx","components/Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DayEnum","TimetableTypeEnum","WeekEnum","TargetForm","match","useRouteMatch","useState","params","target","setTarget","currentTarget","setCurrentTarget","isNeedRedirect","setIsNeedRedirect","useEffect","push","to","encodeURIComponent","Form","inline","onSubmit","event","preventDefault","Row","className","Col","Group","Control","placeholder","onChange","value","Button","type","Home","Container","Jumbotron","DayEnumFromDayNumber","day","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Error","DayOfWeekFromNumber","GetWeekNum","date","getDate","month","getMonth","year","getFullYear","a","Math","floor","y","m","J","d4","L","d1","Uneven","Even","TimetableLesson","lesson","time","subject","teacher","groups","map","group","idx","arr","Fragment","length","place","TimetableDay","week","timetable","lessons","filter","ListGroup","Item","dateString","toLocaleString","Card","Header","Body","variant","TimetableCarousel","index","setIndex","today","Date","days","Array","from","x","i","elem","daydiff","date1","setDate","getDay","previous","current","next","xs","onClick","disabled","TimetableWeek","Alert","TimetableTable","onQuickTargetToggle","error","setError","setTimetable","isLoaded","setIsLoaded","fetch","then","res","json","result","spinner","Spinner","animation","role","message","fluid","TimetablePage","useParams","Autocomplete","startWith","setStartWith","controlId","qwe","Text","AutocompleteResult","aut","setAut","headers","Accept","text","console","log","MainSwitch","path","Navigation","quickTargets","Navbar","bg","expand","Brand","Basename","slice","Toggle","aria-controls","Collapse","id","Nav","activeKey","decodeURIComponent","toLowerCase","Link","eventKey","Page","basename","App","localStorage","getItem","setItem","JSON","stringify","parse","setQuickTargets","check","qts","qt","t","toLocaleLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2548d62.chunk.js","sourcesContent":["export interface Timetable {\r\n    timetable: Lesson[];\r\n    target: string;\r\n    type: TimetableTypeEnum;\r\n}\r\n\r\nexport interface Lesson {\r\n    day: DayEnum;\r\n    week: WeekEnum;\r\n    time: LessonTime;\r\n    subject: string;\r\n    type: string;\r\n    place: string;\r\n    teacher: string | null;\r\n    groups: string[] | null\r\n}\r\n\r\nexport enum DayEnum {\r\n    Monday = \"1\",\r\n    Tuesday = \"2\",\r\n    Wednesday = \"3\",\r\n    Thursday = \"4\",\r\n    Friday = \"5\",\r\n    Saturday = \"6\",\r\n    Sunday = \"0\",\r\n}\r\n\r\nexport enum TimetableTypeEnum {\r\n    Teacher = \"teacher\",\r\n    Group = \"group\"\r\n}\r\n\r\nexport enum WeekEnum {\r\n    Uneven = \"1\",\r\n    Even = \"2\"\r\n}\r\n\r\nexport type LessonTime = \"8:30-10:05\" | \"10:15-11:50\" | \"12:00-13:35\" | \"14:10-15:45\" | \"15:55-17:30\" | \"17:40-19:15\" | \"19:25-21:00\";\r\n\r\nexport type DayOfWeek = \"Воскресенье\" | \"Понедельник\" | \"Вторник\" | \"Среда\" | \"Четверг\" | \"Пятница\" | \"Суббота\";\r\n\r\nexport const DayEnumFromDayNumber = (day: number): DayEnum => {\r\n    switch (day) {\r\n        case 1: {\r\n            return DayEnum.Monday;\r\n        }\r\n        case 2: {\r\n            return DayEnum.Tuesday;\r\n        }\r\n        case 3: {\r\n            return DayEnum.Wednesday;\r\n        }\r\n        case 4: {\r\n            return DayEnum.Thursday;\r\n        }\r\n        case 5: {\r\n            return DayEnum.Friday;\r\n        }\r\n        case 6: {\r\n            return DayEnum.Saturday;\r\n        }\r\n        case 0: {\r\n            return DayEnum.Sunday;\r\n        }\r\n        default: {\r\n            throw new Error(\"Нет такого дня недели\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const DayOfWeekFromNumber = (day: DayEnum): DayOfWeek => {\r\n    switch (day) {\r\n        case DayEnum.Monday: {\r\n            return \"Понедельник\";\r\n        }\r\n        case DayEnum.Tuesday: {\r\n            return \"Вторник\";\r\n        }\r\n        case DayEnum.Wednesday: {\r\n            return \"Среда\";\r\n        }\r\n        case DayEnum.Thursday: {\r\n            return \"Четверг\";\r\n        }\r\n        case DayEnum.Friday: {\r\n            return \"Пятница\";\r\n        }\r\n        case DayEnum.Saturday: {\r\n            return \"Суббота\";\r\n        }\r\n        case DayEnum.Sunday: {\r\n            return \"Воскресенье\";\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetWeekNum = (date: Date): WeekEnum => {\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n    month++;\r\n    let a = Math.floor((14 - month) / 12);\r\n    let y = year + 4800 - a;\r\n    let m = month + 12 * a - 3;\r\n    let J = day + Math.floor((153 * m + 2) / 5) + 365 * y + Math.floor(y / 4) -\r\n        Math.floor(y / 100) + Math.floor(y / 400) - 32045;\r\n    let d4 = (((J + 31741 - (J % 7)) % 146097) % 36524) % 1461;\r\n    let L = Math.floor(d4 / 1460);\r\n    let d1 = ((d4 - L) % 365) + L;\r\n    let week = Math.floor(d1 / 7) + 1;\r\n    return week % 2 === 0 ? WeekEnum.Uneven : WeekEnum.Even;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nexport const TargetForm: React.FunctionComponent = () => {\r\n  const match = useRouteMatch<{ target: string }>(\"/:target\");\r\n  const [target, setTarget] = useState(match ? match?.params.target : \"\");\r\n  const [currentTarget, setCurrentTarget] = useState(target);\r\n  const [isNeedRedirect, setIsNeedRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsNeedRedirect(false);\r\n    return () => {};\r\n  }, [match]);\r\n\r\n  return (\r\n    <>\r\n      {isNeedRedirect ? (\r\n        <Redirect push to={\"/\" + encodeURIComponent(currentTarget)} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Form\r\n        inline\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          setIsNeedRedirect(true);\r\n          setCurrentTarget(target);\r\n        }}\r\n      >\r\n        <Row className=\"no-gutters\">\r\n          <Col>\r\n            <Form.Group>\r\n              <Form.Control\r\n                className=\"mr-sm-2\"\r\n                placeholder=\"Группа/преподаватель\"\r\n                onChange={(event) => setTarget(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"submit\">Открыть</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container, Jumbotron } from \"react-bootstrap\";\r\n\r\nimport { TargetForm } from \"./TargetForm\";\r\n\r\nexport const Home: React.FunctionComponent = () => {\r\n  return (\r\n    <Container>\r\n      <Jumbotron>\r\n        <h3>Введите группу или преподавателя: </h3>\r\n        <TargetForm />\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport { Lesson } from \"../Timetable\";\r\n\r\nexport const TimetableLesson: FC<{ lesson: Lesson }> = ({ lesson }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <p>{lesson.time}</p>\r\n        </Col>\r\n        <Col>\r\n          <p>{lesson.type}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p>{lesson.subject}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p>\r\n            {lesson.teacher ? (\r\n              <Link to={\"/\" + encodeURIComponent(lesson.teacher)}>\r\n                {lesson.teacher}\r\n              </Link>\r\n            ) : (\r\n              lesson.groups?.map((group, idx, arr) => (\r\n                <React.Fragment key={group}>\r\n                  <Link to={\"/\" + encodeURIComponent(group)}>{group}</Link>\r\n                  {idx !== arr.length - 1 ? <span>, </span> : <></>}\r\n                </React.Fragment>\r\n              ))\r\n            )}\r\n          </p>\r\n        </Col>\r\n        <Col>\r\n          <p>{lesson.place}</p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\n\r\nimport {\r\n  Timetable,\r\n  DayOfWeekFromNumber,\r\n  DayEnum,\r\n  WeekEnum,\r\n} from \"../Timetable\";\r\nimport { TimetableLesson } from \"./TimetableLesson\";\r\n\r\nexport const TimetableDay: FC<{\r\n  day: DayEnum;\r\n  week: WeekEnum;\r\n  timetable: Timetable;\r\n  date?: Date;\r\n}> = ({ day, week, timetable, date }) => {\r\n  const lessons = timetable.timetable\r\n    .filter((lesson) => lesson.day === day && lesson.week === week)\r\n    .map((lesson) => (\r\n      <ListGroup.Item\r\n        key={\r\n          lesson.day +\r\n          lesson.week +\r\n          lesson.time +\r\n          lesson.groups +\r\n          lesson.teacher +\r\n          lesson.type\r\n        }\r\n      >\r\n        <TimetableLesson lesson={lesson}></TimetableLesson>\r\n      </ListGroup.Item>\r\n    ));\r\n\r\n  const dateString = date\r\n    ? \" \" +\r\n      date.toLocaleString(\"ru-RU\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      })\r\n    : \"\";\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <Card.Header>\r\n        {DayOfWeekFromNumber(day)} {dateString}\r\n      </Card.Header>\r\n      {lessons.length === 0 ? (\r\n        <Card.Body>Нет занятий</Card.Body>\r\n      ) : (\r\n        <ListGroup variant=\"flush\">{lessons}</ListGroup>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { Timetable, DayEnumFromDayNumber, GetWeekNum } from \"../Timetable\";\r\nimport { TimetableDay } from \"./TimetableDay\";\r\n\r\nexport const TimetableCarousel: FC<{ timetable: Timetable }> = ({\r\n  timetable,\r\n}) => {\r\n  const [index, setIndex] = useState(3);\r\n\r\n  const today = new Date();\r\n  const days = Array.from({ length: 20 }, (x, i) => i)\r\n    .map((elem) => elem - 3)\r\n    .map((daydiff) => {\r\n      let date1 = new Date();\r\n      date1.setDate(today.getDate() + daydiff);\r\n      return date1;\r\n    })\r\n    .filter((date) => date.getDay() !== 0);\r\n\r\n  const previous = days[index - 1];\r\n  const current = days[index];\r\n  const next = days[index + 1];\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={1}>\r\n          <Button\r\n            className=\"timetable-carousel-btn\"\r\n            variant=\"light\"\r\n            onClick={() => setIndex(index - 1)}\r\n            disabled={index === 1}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n        </Col>\r\n        <Col xs={3}>\r\n          <TimetableDay\r\n            day={DayEnumFromDayNumber(previous.getDay())}\r\n            week={GetWeekNum(previous)}\r\n            timetable={timetable}\r\n            date={previous}\r\n          ></TimetableDay>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <TimetableDay\r\n            day={DayEnumFromDayNumber(current.getDay())}\r\n            week={GetWeekNum(current)}\r\n            timetable={timetable}\r\n            date={current}\r\n          ></TimetableDay>\r\n        </Col>\r\n        <Col xs={3}>\r\n          <TimetableDay\r\n            day={DayEnumFromDayNumber(next.getDay())}\r\n            week={GetWeekNum(next)}\r\n            timetable={timetable}\r\n            date={next}\r\n          ></TimetableDay>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <Button\r\n            className=\"timetable-carousel-btn\"\r\n            variant=\"light\"\r\n            onClick={() => setIndex(index + 1)}\r\n            disabled={index === days.length - 2}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport { Timetable, WeekEnum, DayEnum } from \"../Timetable\";\r\nimport { TimetableDay } from \"./TimetableDay\";\r\n\r\nexport const TimetableWeek: FC<{ week: WeekEnum; timetable: Timetable }> = ({\r\n  week,\r\n  timetable,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Alert variant={\"secondary\"}>\r\n        {week === WeekEnum.Uneven ? \"Нечётная неделя\" : \"Чётная неделя\"}\r\n      </Alert>{[\r\n        DayEnum.Monday,\r\n        DayEnum.Tuesday,\r\n        DayEnum.Wednesday,\r\n        DayEnum.Thursday,\r\n        DayEnum.Friday,\r\n        DayEnum.Saturday,\r\n        DayEnum.Sunday\r\n      ].map((day) => (\r\n        <React.Fragment key={day}>\r\n          <TimetableDay\r\n            day={day}\r\n            week={week}\r\n            timetable={timetable}\r\n          ></TimetableDay>\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState, FC, useRef } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Jumbotron,\r\n  Row,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport { Timetable, WeekEnum } from \"../Timetable\";\r\nimport { TimetableCarousel } from \"./TimetableCarousel\";\r\nimport { TimetableWeek } from \"./TimetableWeek\";\r\n\r\nexport const TimetableTable: FC<{\r\n  target: string;\r\n  onQuickTargetToggle: (target: string, check: boolean) => void;\r\n}> = ({ target, onQuickTargetToggle }) => {\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const [timetable, setTimetable] = useState<Timetable | null>(null);\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false);\r\n    fetch(\r\n      \"https://edu.sfu-kras.ru/api/timetable/get&target=\" +\r\n        encodeURIComponent(target)\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result: Timetable) => {\r\n          setTimetable(result);\r\n          setIsLoaded(true);\r\n        },\r\n        (error: Error) => {\r\n          setError(error);\r\n        }\r\n      );\r\n  }, [target]);\r\n\r\n  const spinner = (\r\n    <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Загрузка...</span>\r\n    </Spinner>\r\n  );\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Jumbotron>\r\n          <h3>\r\n            <Alert variant=\"danger\">Ошибка: {error.message}</Alert>\r\n          </h3>\r\n        </Jumbotron>\r\n      </Container>\r\n    );\r\n  } else if (!timetable) {\r\n    return (\r\n      <Container>\r\n        <Jumbotron>{spinner}</Jumbotron>\r\n      </Container>\r\n    );\r\n  } else if (timetable.timetable.length === 0) {\r\n    return (\r\n      <Container>\r\n        <Jumbotron>\r\n          <h3>\r\n            <Alert variant=\"warning\">{timetable.target} не найдено</Alert>\r\n          </h3>\r\n        </Jumbotron>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Jumbotron>\r\n            {isLoaded ? (\r\n              <>\r\n                <h3>{timetable.target}</h3>\r\n                <Button \r\n                  onClick={() => {\r\n                    onQuickTargetToggle(target, true);\r\n                  }}\r\n                >\r\n                  +\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    onQuickTargetToggle(target, false);\r\n                  }}\r\n                >\r\n                  -\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              spinner\r\n            )}\r\n          </Jumbotron>\r\n        </Container>\r\n\r\n        <Container fluid>\r\n          <TimetableCarousel timetable={timetable}></TimetableCarousel>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <TimetableWeek week={WeekEnum.Uneven} timetable={timetable} />\r\n            </Col>\r\n            <Col xs={6}>\r\n              <TimetableWeek week={WeekEnum.Even} timetable={timetable} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { TimetableTable } from \"./TimetableTable\";\r\n\r\nexport const TimetablePage: FC<{\r\n  onQuickTargetToggle: (target: string, check: boolean) => void;\r\n}> = ({ onQuickTargetToggle }) => {\r\n  const { target } = useParams<{ target: string }>();\r\n  return (\r\n    <>\r\n      <TimetableTable\r\n        target={target}\r\n        onQuickTargetToggle={onQuickTargetToggle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const Autocomplete: React.FunctionComponent = () => {\r\n  const [startWith, setStartWith] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            placeholder=\"Enter t\"\r\n            onChange={(qwe) => setStartWith(qwe.target.value)}\r\n          />\r\n          <Form.Text>safs</Form.Text>\r\n        </Form.Group>\r\n      </Form>\r\n      <AutocompleteResult startWith={startWith} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst AutocompleteResult: React.FunctionComponent<{ startWith: string }> = ({\r\n  startWith,\r\n}) => {\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState<string[]>([]);\r\n  const [aut, setAut] = useState<string>(\"1\");\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false);\r\n    fetch(\r\n      \"https://edu.sfu-kras.ru/timetable/groups/autocomplete/\" +\r\n        encodeURIComponent(startWith),\r\n      {\r\n        headers: { Accept: \"application/json\" },\r\n      }\r\n    )\r\n      .then(async (res) => {\r\n        return res.text();\r\n      })\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          console.log(result);\r\n          setAut(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          console.log(error);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, [startWith]);\r\n\r\n  return <div>{aut}</div>;\r\n\r\n  //   if (error) {\r\n  //     return <div>Error: {error.message}</div>;\r\n  //   } else if (!isLoaded) {\r\n  //     return <div>Loading...</div>;\r\n  //   } else {\r\n  //     return <div>{items[0]}</div>;\r\n  //   }\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\n\r\nimport { Home } from \"./Home\";\r\nimport { TimetablePage } from \"./TimetablePage\";\r\nimport { Autocomplete } from \"./Autocomplete\";\r\n\r\nexport const MainSwitch: FC<{\r\n  onQuickTargetToggle: (target: string, check: boolean) => void;\r\n}> = ({ onQuickTargetToggle }) => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/auto\">\r\n          <Autocomplete></Autocomplete>\r\n        </Route>\r\n        <Route path=\"/:target\">\r\n          <TimetablePage onQuickTargetToggle={onQuickTargetToggle} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { TargetForm } from \"./TargetForm\";\r\nimport { Basename } from \"../App\";\r\n\r\nexport const Navigation: FC<{ quickTargets: string[] }> = ({\r\n  quickTargets,\r\n}) => {\r\n  const match = useRouteMatch<{ target: string }>(\"/:target\");\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand>{Basename.slice(1)}</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav\r\n          activeKey={decodeURIComponent(\r\n            match ? match.params.target : \"\"\r\n          ).toLowerCase()}\r\n          className=\"mr-auto\"\r\n        >\r\n          {quickTargets.map((group: string) => (\r\n            <Nav.Item key={group}>\r\n              <LinkContainer to={\"/\" + encodeURIComponent(group)}>\r\n                <Nav.Link eventKey={group.toLowerCase()}>{group}</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          ))}\r\n        </Nav>\r\n        <TargetForm />\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { HashRouter, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Basename } from \"../App\";\r\nimport { MainSwitch } from \"./MainSwitch\";\r\nimport { Navigation } from \"./Navigation\";\r\nexport const Page: FC<{\r\n  quickTargets: string[];\r\n  onQuickTargetToggle: (target: string, check: boolean) => void;\r\n}> = ({ quickTargets, onQuickTargetToggle }) => {\r\n  return (\r\n    <BrowserRouter basename={Basename}>\r\n      <>\r\n        {/* <Redirect push to={\"/\"} /> */}\r\n        <HashRouter>\r\n          <>\r\n            <Container fluid>\r\n              <Container>\r\n                <Navigation quickTargets={quickTargets} />\r\n              </Container>\r\n              <MainSwitch onQuickTargetToggle={onQuickTargetToggle} />\r\n            </Container>\r\n          </>\r\n        </HashRouter>\r\n      </>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Page } from \"./components/Page\";\r\n\r\nexport const Basename = \"/sfu-timetable-3d50\";\r\n\r\nexport const App: FC = () => {\r\n  const initQuickTargets = (): string[] => {\r\n    let qts = localStorage.getItem(\"quick_targets\");\r\n    if (!qts) {\r\n      localStorage.setItem(\r\n        \"quick_targets\",\r\n        JSON.stringify([\"КИ18-16б\", \"КИ18-17/1б\", \"КИ18-17/2б\"])\r\n      );\r\n    }\r\n    return JSON.parse(localStorage.getItem(\"quick_targets\")!);\r\n  };\r\n\r\n  const [quickTargets, setQuickTargets] = useState<string[]>(initQuickTargets);\r\n\r\n  const toggleQuickTarget = (target: string, check: boolean) => {\r\n    target = decodeURIComponent(target);\r\n    let qts = localStorage.getItem(\"quick_targets\");\r\n    if (!qts) {\r\n      return;\r\n    }\r\n    let qt: string[] = JSON.parse(qts);\r\n    if (check) {\r\n      if (\r\n        !qt\r\n          .map((t) => t.toLocaleLowerCase())\r\n          .includes(target.toLocaleLowerCase())\r\n      ) {\r\n        qt.push(target);\r\n      }\r\n    } else {\r\n      qt = qt.filter((t) => t !== target);\r\n    }\r\n    localStorage.setItem(\"quick_targets\", JSON.stringify(qt));\r\n    setQuickTargets(qt);\r\n  };\r\n\r\n  return (\r\n    <Page quickTargets={quickTargets} onQuickTargetToggle={toggleQuickTarget} />\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}